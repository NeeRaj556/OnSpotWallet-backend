generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                   String        @id @default(uuid())
  name                 String
  role                 String       @default("user")
  email                String        @unique
  password             String
  address              String?
  phone                String
  profilePicture       String?
  createdAt            DateTime      @default(now()) @map("created_at")
  latitude             Float?
  longitude            Float?
  locationUpdatedAt    DateTime?
  deletedAt            DateTime?
  updatedAt            DateTime      @default(now())
  type                 String?
  currency             String        @default("$")
  balance              Float         @default(0)
  preferredOfflineBalance Float     @default(0)
  pin                 Int?          
  onlineLimit        Float          @default(1000)
  offlineLimit       Float          @default(10)
  onlineBalance      Float          @default(0)
  offlineBalance     Float          @default(0)
  sentTransactions     Transaction[] @relation("TransactionSender")
  receivedTransactions Transaction[] @relation("TransactionReceiver")
  updatedTransactions  Transaction[] @relation("TransactionUpdater")
  otp                  Otp?        @relation("userOtp")
  isVerified           Boolean     @default(false)
}
model Otp {
  id                String        @id @default(uuid())
  pin               String        // hashed OTP
  expiryAt          DateTime
  attempts          Int           @default(0) // verification attempt count
  resendCount       Int           @default(0) // number of times OTP was resent
  lastSentAt        DateTime?
  lastAttemptAt     DateTime?
  user              User          @relation("userOtp", fields: [userId], references: [id])
  userId            String        @unique
}

model Transaction {
  id           String          @id @default(uuid())
  senderId     String
  receiverId   String
  sender       User            @relation("TransactionSender", fields: [senderId], references: [id])
  receiver     User            @relation("TransactionReceiver", fields: [receiverId], references: [id])
  latitude     Float?
  longitude    Float?
  receivedAt   DateTime?
  sentAt       DateTime?
  transactedAt DateTime?
  mode         TransactionMode
  updatedBy    String?
  updatingUser User?           @relation("TransactionUpdater", fields: [updatedBy], references: [id])
}

enum TransactionMode {
  offline
  online
}

 
